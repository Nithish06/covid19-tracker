{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\NITHISH\\\\Desktop\\\\covid19-tracker\\\\covid-19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React from\"react\";import numeral from\"numeral\";import{Circle,Popup}from\"react-leaflet\";var casesTypeColors={cases:{hex:\"#CC1034\",multiplier:800},recovered:{hex:\"#7dd71d\",multiplier:1200},deaths:{hex:\"#fb4443\",multiplier:2000}};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);return sortedData.sort(function(a,b){return a.cases>b.cases?-1:1;});};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};// DRAW circles on the map with interactive tooltip\nexport var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"cases\";return data.map(function(country){return/*#__PURE__*/React.createElement(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],fillOpacity:0.4,color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier},/*#__PURE__*/React.createElement(Popup,null,/*#__PURE__*/React.createElement(\"div\",{className:\"info-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/React.createElement(\"div\",{className:\"info-name\"},country.country),/*#__PURE__*/React.createElement(\"div\",{className:\"info-confirmed\"},\"Cases: \",numeral(country.cases).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-recovered\"},\"Recovered: \",numeral(country.recovered).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-deaths\"},\"Deaths: \",numeral(country.deaths).format(\"0,0\")))));});};","map":{"version":3,"sources":["C:/Users/NITHISH/Desktop/covid19-tracker/covid-19-tracker/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"kMAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAASC,MAAT,CAAiBC,KAAjB,KAA8B,eAA9B,CAEA,GAAMC,CAAAA,eAAe,CAAG,CACtBC,KAAK,CAAE,CACLC,GAAG,CAAE,SADA,CAELC,UAAU,CAAE,GAFP,CADe,CAKtBC,SAAS,CAAE,CACTF,GAAG,CAAE,SADI,CAETC,UAAU,CAAE,IAFH,CALW,CAStBE,MAAM,CAAE,CACNH,GAAG,CAAE,SADC,CAENC,UAAU,CAAE,IAFN,CATc,CAAxB,CAeA,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAU,CAChC,GAAMC,CAAAA,UAAU,oBAAOD,IAAP,CAAhB,CAEA,MAAOC,CAAAA,UAAU,CAACC,IAAX,CAAgB,SAACC,CAAD,CAAIC,CAAJ,QAAWD,CAAAA,CAAC,CAACT,KAAF,CAAUU,CAAC,CAACV,KAAZ,CAAoB,CAAC,CAArB,CAAyB,CAApC,EAAhB,CAAP,CACD,CAJM,CAMP,MAAO,IAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAC7BA,CAAAA,IAAI,YAAOhB,OAAO,CAACgB,IAAD,CAAP,CAAcC,MAAd,CAAqB,MAArB,CAAP,EAAwC,IADf,EAAxB,CAGP;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACR,IAAD,KAAOS,CAAAA,SAAP,2DAAmB,OAAnB,OAC3BT,CAAAA,IAAI,CAACU,GAAL,CAAS,SAACC,OAAD,qBACP,oBAAC,MAAD,EACE,MAAM,CAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADV,CAEE,WAAW,CAAE,GAFf,CAGE,KAAK,CAAErB,eAAe,CAACgB,SAAD,CAAf,CAA2Bd,GAHpC,CAIE,SAAS,CAAEF,eAAe,CAACgB,SAAD,CAAf,CAA2Bd,GAJxC,CAKE,MAAM,CACJoB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgChB,eAAe,CAACgB,SAAD,CAAf,CAA2Bb,UAN/D,eASE,oBAAC,KAAD,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BACE,SAAS,CAAC,WADZ,CAEE,KAAK,CAAE,CAAEqB,eAAe,eAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B,KAAjB,CAFT,EADF,cAKE,2BAAK,SAAS,CAAC,WAAf,EAA4BP,OAAO,CAACA,OAApC,CALF,cAME,2BAAK,SAAS,CAAC,gBAAf,YACUrB,OAAO,CAACqB,OAAO,CAACjB,KAAT,CAAP,CAAuBa,MAAvB,CAA8B,KAA9B,CADV,CANF,cASE,2BAAK,SAAS,CAAC,gBAAf,gBACcjB,OAAO,CAACqB,OAAO,CAACd,SAAT,CAAP,CAA2BU,MAA3B,CAAkC,KAAlC,CADd,CATF,cAYE,2BAAK,SAAS,CAAC,aAAf,aACWjB,OAAO,CAACqB,OAAO,CAACb,MAAT,CAAP,CAAwBS,MAAxB,CAA+B,KAA/B,CADX,CAZF,CADF,CATF,CADO,EAAT,CAD2B,EAAtB","sourcesContent":["import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n\r\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n// DRAW circles on the map with interactive tooltip\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      fillOpacity={0.4}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          />\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n"]},"metadata":{},"sourceType":"module"}