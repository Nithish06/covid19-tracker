{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\NITHISH\\\\Desktop\\\\covid19-tracker\\\\covid-19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\NITHISH\\\\Desktop\\\\covid19-tracker\\\\covid-19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\NITHISH\\\\Desktop\\\\covid19-tracker\\\\covid-19-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{MenuItem,FormControl,Select,Card,CardContent}from\"@material-ui/core\";import InfoBox from\"./InfoBox\";import Map from\"./Map\";import\"./App.css\";import Table from\"./Table\";import{sortData,prettyPrintStat}from\"./util\";import LineGraph from\"./LineGraph\";import\"leaflet/dist/leaflet.css\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState(\"worldwide\"),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];// eslint-disable-next-line\nvar _useState9=useState({lat:34.80746,lng:-40.4796}),_useState10=_slicedToArray(_useState9,2),mapCenter=_useState10[0],setMapCenter=_useState10[1];var _useState11=useState(3),_useState12=_slicedToArray(_useState11,2),mapZoom=_useState12[0],setMapZoom=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),mapCountries=_useState14[0],setMapCountries=_useState14[1];var _useState15=useState(\"cases\"),_useState16=_slicedToArray(_useState15,2),casesType=_useState16[0],setCasesType=_useState16[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setMapCountries(data);setCountries(countries);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;url=countryCode===\"worldwide\"?\"https://disease.sh/v3/covid-19/all\":\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=4;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);setMapZoom(4);});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"app\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__left\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"COVID-19 TRACKER\"),/*#__PURE__*/React.createElement(FormControl,{className:\"app__dropdown\"},/*#__PURE__*/React.createElement(Select,{variant:\"outlined\",onChange:onCountryChange,value:country},/*#__PURE__*/React.createElement(MenuItem,{value:\"worldwide\"},\"Worldwide\"),countries.map(function(country){return/*#__PURE__*/React.createElement(MenuItem,{value:country.value},country.name);})))),/*#__PURE__*/React.createElement(\"div\",{className:\"app__stats\"},/*#__PURE__*/React.createElement(InfoBox,{isRed:true,active:casesType===\"cases\",onClick:function onClick(e){return setCasesType(\"cases\");},title:\"Coronavirus Cases\",cases:prettyPrintStat(countryInfo.todayCases),total:prettyPrintStat(countryInfo.cases)}),/*#__PURE__*/React.createElement(InfoBox,{active:casesType===\"recovered\",onClick:function onClick(e){return setCasesType(\"recovered\");},title:\"Recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:prettyPrintStat(countryInfo.recovered)}),/*#__PURE__*/React.createElement(InfoBox,{isRed:true,active:casesType===\"deaths\",onClick:function onClick(e){return setCasesType(\"deaths\");},title:\"Deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:prettyPrintStat(countryInfo.deaths)})),/*#__PURE__*/React.createElement(Map,{casesType:casesType,countries:mapCountries,center:mapCenter,zoom:mapZoom})),/*#__PURE__*/React.createElement(Card,{className:\"app__right\"},/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Live Cases by Country\"),/*#__PURE__*/React.createElement(Table,{countries:tableData}),/*#__PURE__*/React.createElement(\"h3\",{className:\"app__graphTitle\"},\"Worldwide new \",casesType),/*#__PURE__*/React.createElement(LineGraph,{className:\"app__graph\",casesType:casesType}))));}export default App;","map":{"version":3,"sources":["C:/Users/NITHISH/Desktop/covid19-tracker/covid-19-tracker/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","Map","Table","sortData","prettyPrintStat","LineGraph","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport \"./App.css\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  // eslint-disable-next-line\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n\n        setMapZoom(4);\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            isRed\n            active={casesType === \"cases\"}\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={prettyPrintStat(countryInfo.cases)}\n          />\n          <InfoBox\n            active={casesType === \"recovered\"}\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={prettyPrintStat(countryInfo.recovered)}\n          />\n          <InfoBox\n            isRed\n            active={casesType === \"deaths\"}\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={prettyPrintStat(countryInfo.deaths)}\n          />\n        </div>\n\n        <Map\n          casesType={casesType}\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3 className=\"app__graphTitle\">Worldwide new {casesType}</h3>\n          <LineGraph className=\"app__graph\" casesType={casesType} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}